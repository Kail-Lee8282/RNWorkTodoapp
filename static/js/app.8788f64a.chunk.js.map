{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setToDos","editkey","setEditKey","inputRef","useRef","travel","saveLastTab","work","addToDo","newToDos","Date","now","completed","saveToDos","toSave","AsyncStorage","setItem","JSON","stringify","err","Alert","alert","loadToDos","jsonValue","getItem","parse","tab","loadLastTab","useEffect","deleteToDO","key","Platform","OS","confirm","style","onPress","completedToDo","console","log","onEndEditing","useLayoutEffect","current","focus","cursor","View","styles","container","StatusBar","header","TouchableOpacity","onPressOut","Text","btnText","color","TextInput","input","returnKeyType","placeholder","onChangeText","payload","onSubmitEditing","value","ScrollView","Object","keys","map","toDo","ref","toDoTextInput","nativeEvent","onEditTodoEditing","toDoText","textDecorationLine","toDoBtns","toDoBtn","editTodo","FontAwesome5","name","size","Fontisto","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","alignItems","marginHorizontal"],"mappings":"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","file":"static/js/app.8788f64a.chunk.js","sourcesContent":["export const theme= {\r\n    background:\"black\",\r\n    grey:\"#636e72\",\r\n    toDoBg:\"#2d3436\",\r\n}","import { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { theme } from \"./colors\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Fontisto, FontAwesome5 } from \"@expo/vector-icons\";\n\n\nconst TAB_WORK = \"WORK\";\nconst TAB_TRAVEL = \"TRAVEL\";\n\nconst STORAGE_LAST_TAB = \"@lstTab\";\nconst STORAGE_KEY = \"@toDos\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  const [editkey, setEditKey] = useState(\"\");\n\n  let inputRef = useRef(null);\n\n  const travel = async () => {\n    setWorking(false);\n    await saveLastTab(TAB_TRAVEL);\n  };\n  const work = async () => {\n    setWorking(true);\n    await saveLastTab(TAB_WORK);\n  };\n\n  const onChangeText = (payload) => setText(payload);\n  const addToDo = async () => {\n    if (text === \"\") return;\n\n    const newToDos = {\n      ...toDos,\n      [Date.now()]: { text, working, completed: false },\n    };\n\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  };\n\n  const saveToDos = async (toSave) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n    } catch (err) {\n      Alert.alert(err);\n    }\n  };\n\n  const loadToDos = async () => {\n    const jsonValue = await AsyncStorage.getItem(STORAGE_KEY);\n    if(jsonValue)\n    {\n      setToDos(JSON.parse(jsonValue));\n    }\n  };\n\n  const saveLastTab = async (tab) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_LAST_TAB, tab);\n    } catch (err) {\n      Alert.alert(err);\n    }\n  };\n\n  const loadLastTab = async () => {\n    try {\n      const tab = await AsyncStorage.getItem(STORAGE_LAST_TAB);\n      if (tab === TAB_TRAVEL) setWorking(false);\n      else setWorking(true);\n    } catch (err) {\n      Alert.alert(err);\n    }\n  };\n\n  useEffect(() => {\n    loadToDos();\n    loadLastTab();\n  }, []);\n\n  const deleteToDO = async (key) => {\n    if(Platform.OS === \"web\"){\n      const ok = confirm(\"Do you want to delete this to-do\");\n      if(ok){\n        const newToDos = { ...toDos };\n        // 데이터 삭제\n        delete newToDos[key];\n        // 변경된 데이터 저장\n        setToDos(newToDos);\n        await saveToDos(newToDos);\n      }\n    }else{\n      Alert.alert(\"Delete To Do?\", \"Are you sure?\", [\n        { text: \"Cancel\", style: \"cancel\" },\n        {\n          text: \"I'm sure\",\n          style: \"destructive\",\n          onPress: async () => {\n            // 데이터 복제\n            const newToDos = { ...toDos };\n            // 데이터 삭제\n            delete newToDos[key];\n            // 변경된 데이터 저장\n            setToDos(newToDos);\n            await saveToDos(newToDos);\n          },\n        },\n      ]);\n    }\n  };\n\n  const completedToDo = async (key) => {\n    const completed = toDos[key].completed;\n    if(Platform.OS === \"web\"){\n      \n    }else{\n      if (!completed) {\n        Alert.alert(\"Finished To Do?\", \"Are you done?\", [\n          { text: \"Cancel\", style: \"destructive\" },\n          {\n            text: \"Finished\",\n            style: \"default\",\n            onPress: async () => {\n              const newToDos = { ...toDos };\n              newToDos[key].completed = !completed;\n              console.log(newToDos[key].completed);\n              setToDos(newToDos);\n              await saveToDos(newToDos);\n            },\n          },\n        ]);\n      } else {\n        Alert.alert(\n          \"Cancel the finished To Do?\",\n          \"Are you sure you want to cancel the to-do?\",\n          [\n            { text: \"Cancel\", style: \"destructive\" },\n            {\n              text: \"I'm sure\",\n              style: \"default\",\n              onPress: async () => {\n                const newToDos = { ...toDos };\n                newToDos[key].completed = !completed;\n                console.log(newToDos[key].completed);\n                setToDos(newToDos);\n                await saveToDos(newToDos);\n              },\n            },\n          ]\n        );\n      }\n    }\n  };\n\n  const editTodo = (key)=>{\n    setEditKey(key);\n  }\n\n  const onEditTodoEditing=(key, value)=>{\n    Alert.alert(\"Edit To-Do\",\"Do you want to edit your to-do?\",\n    [\n      {text:\"Cancel\",style:\"destructive\"},\n      {text:\"I'm sure\",\n      onPress: async()=>{\n        const newToDos={...toDos};\n        newToDos[key].text = value;\n        setToDos(newToDos);\n        await saveToDos(newToDos);\n      }\n    }\n    ]);\n  }\n\n  const onEndEditing=()=>{\n    setEditKey(\"\");\n  }\n\n  useLayoutEffect(()=>{\n    if(inputRef.current !== null)inputRef.current?.focus({cursor:'end'});\n  });\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPressOut={work}>\n          <Text\n            style={{ ...styles.btnText, color: working ? \"white\" : theme.grey }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPressOut={travel}>\n          <Text\n            style={{\n              ...styles.btnText,\n              color: !working ? \"white\" : theme.grey,\n            }}\n          >\n            Travel\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TextInput\n          style={styles.input}\n          returnKeyType=\"done\"\n          placeholder={working ? \"Add a To Do\" : \"Where do you want to go?\"}\n          onChangeText={onChangeText}\n          onSubmitEditing={addToDo}\n          value={text}\n        >\n          </TextInput>\n      </View>\n      <ScrollView>\n        {Object.keys(toDos).map((key) =>\n          toDos[key].working === working ? (\n            <View key={key} style={styles.toDo}>\n              {editkey === key ? (\n                <TextInput\n                  ref={inputRef}\n                  style={styles.toDoTextInput}\n                  onSubmitEditing={({nativeEvent:{text}})=>onEditTodoEditing(key,text)}\n                  onEndEditing={onEndEditing}\n                >\n                  {toDos[key].text}\n                  </TextInput>\n              ) : (\n                <Text\n                  style={{\n                    ...styles.toDoText,\n                    textDecorationLine: toDos[key].completed\n                      ? \"line-through\"\n                      : \"none\",\n                  }}\n                >\n                  {toDos[key].text}\n                </Text>\n              )}\n\n              <View style={styles.toDoBtns}>\n                <TouchableOpacity style={styles.toDoBtn}\n                onPress={()=>editTodo(key)}>\n                  <FontAwesome5 name=\"edit\" size={18} color={theme.grey} />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={styles.toDoBtn}\n                  onPress={() => completedToDo(key)}\n                >\n                  <Fontisto name=\"check\" size={18} color={theme.grey} />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={styles.toDoBtn}\n                  onPress={() => deleteToDO(key)}\n                >\n                  <Fontisto name=\"trash\" size={18} color={theme.grey} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ) : null\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.background,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginTop: 20,\n    fontSize: 18,\n  },\n  toDo: {\n    backgroundColor: theme.toDoBg,\n    marginVertical: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  toDoText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n  toDoTextInput: {\n    flex: 1,\n    fontSize: 16,\n    backgroundColor: \"white\",\n  },\n  toDoBtns: {\n    flexDirection: \"row\",\n  },\n  toDoBtn: {\n    marginHorizontal: 5,\n  },\n});\n"],"sourceRoot":""}